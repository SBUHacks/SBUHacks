{"version":3,"sources":["components/Schedule/index.jsx"],"names":["Schedule","className","id"],"mappings":"gJAAA,6BAwFeA,UAlFf,WAmBE,OACE,sBAAKC,UAAU,qDAAqDC,GAAG,WAAvE,UACE,qBAAKD,UAAU,iBACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,sBAAMA,UAAU,8BAA8BC,GAAG,iBAAjD,sBACA,qBAAKD,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf","file":"static/js/9.593e917f.chunk.js","sourcesContent":["import React from 'react';\n// import EventList from './EventList';\n// import { FIRST_EVENTS, SECOND_EVENTS, THIRD_EVENTS } from './Data';\nimport './schedule.css';\n\n// The Schedule page\nfunction Schedule() {\n  // const [currDay, setCurrDay] = useState(0);\n  // const [currEvents, setCurrEvents] = useState(FIRST_EVENTS);\n  // const [smallScreen, setSmallScreen] = useState(false);\n\n  // useEffect(() => {\n  //   if (currDay === 0) {\n  //     setCurrEvents(FIRST_EVENTS);\n  //   } else if (currDay === 1) {\n  //     setCurrEvents(SECOND_EVENTS);\n  //   } else {\n  //     setCurrEvents(THIRD_EVENTS);\n  //   }\n  // }, [currDay]);\n\n  // window.addEventListener('reload', () => setSmallScreen(window.innerWidth < 600));\n  // window.addEventListener('scroll', () => setSmallScreen(window.innerWidth < 600));\n  // window.addEventListener('resize', () => setSmallScreen(window.innerWidth < 600));\n\n  return (\n    <div className=\"section-container schedule-container general-style\" id=\"schedule\">\n      <div className=\"green-planet\" />\n      <div className=\"mint-star\" />\n      <div className=\"blue-star\" />\n      <span className=\"section-title general-style\" id=\"schedule-title\">Schedule</span>\n      <div className=\"schedule-wrapper\">\n        <div className=\"coming-soon event-list\">Coming Soon...</div>\n        {/*\n        <div className=\"tab-wrapper\">\n          <button\n            className={`tab-button${(currDay === 0) ? ' button-active' : ''}`}\n            onClick={() => {\n              setCurrDay(0);\n            }}\n            type=\"button\"\n          >\n            {smallScreen ? ('Fri.') : ('Friday')}\n          </button>\n          <button\n            className={`tab-button${(currDay === 1) ? ' button-active' : ''}`}\n            onClick={() => {\n              setCurrDay(1);\n            }}\n            type=\"button\"\n          >\n            {smallScreen ? ('Sat.') : ('Saturday')}\n          </button>\n          <button\n            className={`tab-button${(currDay === 2) ? ' button-active' : ''}`}\n            onClick={() => {\n              setCurrDay(2);\n            }}\n            type=\"button\"\n          >\n            {smallScreen ? ('Sun.') : ('Sunday')}\n          </button>\n        </div>\n        <EventList events={currEvents} />\n        */}\n      </div>\n    </div>\n  );\n}\n\n// eslint-disable-next-line no-lone-blocks\n{ /* <div className=\"events-wrapper\">\n  <ScheduleEvent name=\"Fueling the rocket ship...\"\n  expiration=\"2021-09-24T17:00:00.000-04:00\"className=\"rocket-ship-event\" />\n  <span className=\"schedule-sub general-style\">FRIDAY - September 24th</span>\n  {FIRST_EVENTS.map(event => (\n    <ScheduleEvent name={event.name} expiration={event.endTime} key={event.name} />\n  ))}\n</div>\n<div className=\"events-wrapper\">\n  <span className=\"schedule-sub general-style\">SATURDAY - September 25th</span>\n  {SECOND_EVENTS.map(event => (\n    <ScheduleEvent name={event.name} expiration={event.endTime} key={event.name} />\n  ))}\n  <ScheduleEvent name=\"Rocket ship has landed!\"\n  expiration=\"2021-09-25T20:00:00.000-04:00\" className=\"rocket-ship-event\" />\n</div> */ }\n\nexport default Schedule;\n"],"sourceRoot":""}